{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rockey_Dhruv\\\\Documents\\\\React Practice\\\\ass\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count - 1),\n      children: \"dicrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"aEy7UJVTFhCoeG8i5kakn9vy8b4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Rockey_Dhruv/Documents/React Practice/ass/src/App.jsx"],"names":["React","useState","App","count","setCount"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,WAAP;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,KAAD,EAASC,QAAT,IAAqBH,QAAQ,CAAC,CAAD,CAAnC;AACA,sBACE;AAAA,4BACE;AAAA,gBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAC,CAAP,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAC,CAAP,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD,CAVD;;GAAMD,G;;KAAAA,G;AAYN,eAAeA,GAAf","sourcesContent":["import React,{useState} from \"react\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n\r\n  const [count , setCount] = useState(0)\r\n  return (\r\n    <>\r\n      <h1>{count}</h1>\r\n      <button onClick={() => setCount(count+1)}>increment</button>\r\n      <button onClick={() => setCount(count-1)}>dicrement</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}